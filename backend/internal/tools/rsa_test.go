package tools

import (
	"fmt"
	"testing"
)

func Test_Gen(t *testing.T) {
	priv, pub, err := RsaBase64KeyPair(2048)
	if err != nil {
		t.Errorf("generate key fail: %v", err)
	}

	fmt.Printf("private: %s\n", priv)
	fmt.Printf("public: %s\n", pub)
}

func Test_Encrypt(t *testing.T) {
	publicKey := "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdTA2a0twUWNlVTVqVFZoMUhseWcKb0cxUFBXQ1p4cWJrMlFrR1dqalh6emVkWE9GZVMwbERJblhPVTZzcXVxQXlVeE83ckowT0Z5Zml1R3hXR2QzKwpvak1icHQ3cVBCU1JmQ3gzcmJ1YVA4UVdOeHBUSHkyWWxSLzRJQWRJVlk0SEtKUmxVK3BzNkF4dW94VjdheHNnCkJ5enljUDc3cHNUTDdNRi9uSnhRTVRMZEVyTnlaYTcxSDVLWFVPSjlMTEc0dGZ0SVhHRzZVTnVDQ1U5dXJWT1YKemxVSnEzR3ROQWI3T29pWUlyMk11dW1lOXk5NFhsY3haZHdORDhONmJQU2ZheXU0WnQyd1B2bHJYWFR3REhMVApnMTFvMUdzV2ZFdFQxM3MvYWdRY0JyK2tBTEwzY1U1cGw3RWp2NVlMLzhJQW5IMHNTbFBzSkZIdDZVZXNsKzQ1CnVRSURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K"
	privateKey := "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdTA2a0twUWNlVTVqVFZoMUhseWdvRzFQUFdDWnhxYmsyUWtHV2pqWHp6ZWRYT0ZlClMwbERJblhPVTZzcXVxQXlVeE83ckowT0Z5Zml1R3hXR2QzK29qTWJwdDdxUEJTUmZDeDNyYnVhUDhRV054cFQKSHkyWWxSLzRJQWRJVlk0SEtKUmxVK3BzNkF4dW94VjdheHNnQnl6eWNQNzdwc1RMN01GL25KeFFNVExkRXJOeQpaYTcxSDVLWFVPSjlMTEc0dGZ0SVhHRzZVTnVDQ1U5dXJWT1Z6bFVKcTNHdE5BYjdPb2lZSXIyTXV1bWU5eTk0ClhsY3haZHdORDhONmJQU2ZheXU0WnQyd1B2bHJYWFR3REhMVGcxMW8xR3NXZkV0VDEzcy9hZ1FjQnIra0FMTDMKY1U1cGw3RWp2NVlMLzhJQW5IMHNTbFBzSkZIdDZVZXNsKzQ1dVFJREFRQUJBb0lCQUJDVkU3K1pRVFFVRm9LQQpkRTN0MFdLaWlzTmFUQUxrUDVwZlRDcXNvWjU4dy9lM0ZBd0NQbWxNbUttYm03ck45K2FXOXFSL2V3SGR6QnFiCnJMdTVoWk9DaHM0dEtmdUxycDJacWphOVJ4aWlHWDFqWFR5RFl1REE1Y3lnR0cxS2w2T21ENXB3UkpmK2tjVHEKWC9USmYvcGlwa3dPcHVUS3cyc0FiblhFK095QjkzcGJxMnIzRUdKd1oxU0hOOUNuUVZQQWh5U0E1NWJTWnFjdwpGVExReXJSWDFzblRpcCtpcnVlVlloSTMydnYxZ1o1RVdWOUJmVDNhNXJOY3o2SGVNWWE1OGtZTFV5UU01eHEvCitPZjdHeFhKTkpmcGFjZng5T25zVGVqMHVhMjd0TmQ1dkVYcENIamdTdGNIZVVZZWIwS3pDVnNXc2lVY2lqck8KYnRrRVdBa0NnWUVBNFlTL3kwZ0w3eGFpOXMzSU1EOHZENkU2Y3dwczN6WVhDVSt3T3dYSDRpcENKcDJKeDlIawpJTkcvYnZTTFJVYkZLRXVFU2V0SG1Vb3FTZmcwWEp3K3dQTjJEdE5ZK1FFRDFlR3gyVEQ0TWErUHVFSFc4azRUCmlyQ1ExU2dqd2J2T3B0STdwKzZSOVNGK2RoZGRKb0JhdlJNYzdGall4TU0xUmJYMzh2Vk1OSThDZ1lFQTFKKzYKQ2RXYmRwSGJzWmN5MFUwMW40R1E5dndBMm1raFBaNW82ZTRONG9tVGY3UnBFVWNUVEZLSkJZd0JLVjdEOFJPMgpJOG9JYktIU05qMmRSN092ZEMzMXJ6bHdBNW9WNjBYNUhGU2p0UjBmWTJXU3ZqSjNHNnF6VzNiNDIyQWx2QUVWCkdzRnJ5QjlVcWxWdkoyOWJCbXUyWC9pSjFoMGgreGQ4SUxydm9UY0NnWUJ2ZjRTYjZza0xzbk5yOXAzdFRLL2wKMkY3ZmxkM3lGZm9adm01eElCQ05QenRwZ0NZb3h4czFKcjZ4Q3ZMNGsxN1M1MU5HZ0s3cm1RR0RoTlhPbStsaQoySHdjSkY0dTdsT0pJWWNlek5sSkozVzFNY2dtRUhnVTcrc0xtRWJsZUFkWjcwTlRhZDU4QmMxU2NZYTZqR2RRCloreTY1Y3AycmRUZTNITDBpbGJjL1FLQmdRREE4MFl2Z0lINUlyb2N1aG9xcUFkZWZZVGhMYVZVand6VVR6bmoKOTl6djFHdGUrNGhSWG8rYnRsYVVDdzVPemFuQXoyTjlyT3ppTUNPRWgzdUFRd2FZeHRCcXVCUDNvTS85VnQyTwpvUnlDMGkvVzBxbE5JcHpHSmExbjlsbzFNbFpyK3d0ODRVUC9NcmR4YitCVUNCQ3hqZlBOdWN6VDJsSW8rNUh3ClhkUHlGd0tCZ1FETkJYSU5kaXgwTk9qeGtXbS85THVsK1VPVFUyRDZVYUoya01sYnBjcGVaUUJDa3h1dE0wR1AKT04rRHE5dS8wY05BbnV3a1JLLzk3bWpYaFJtNkdUaUdPUGhpNmU3MW1JSlBqek95NFJDQzVTZ1NQNlg2bTBFUQpLQjFITWtZOWFjYk9TYmkrOUF3RWVCT0tJU2UrdVUvOGpDUkQyUDVlVW1XRTZxRUZnQUtRRVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="

	text, err := RsaEncrypt(publicKey, []byte("qwe123$$"))
	if err != nil {
		t.Errorf("encrypt error: %v", err)
		return
	}
	fmt.Printf("encrypt value: %v\n", string(text))
	plain, err := RsaDecrypt(privateKey, text)
	if err != nil {
		t.Errorf("decrypt error: %v", err)
		return
	}
	fmt.Printf("decrypt value: %v\n", string(plain))
}
